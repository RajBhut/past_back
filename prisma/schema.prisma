// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  email     String   @unique
  username  String?  @unique
  password  String
  avatar    String?  @default("")

  Post Post[]

  Upvote Upvote[]
}

model Post {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  title         String   @db.VarChar(255)
  content       String?
  description   String?  @default("")
  language      String   @default("javascript")
  tags          String[] @default([])
  published     Boolean  @default(false)
  burnAfterRead Boolean  @default(false)
  views         Int      @default(0)
  author        User     @relation(fields: [authorId], references: [id])
  authorId      Int
  linkId        String   @default("")
  accessId      String   @default("")
  accesstocken  String   @default("")
  Upvote        Upvote[]
}

model Upvote {
  id     Int  @id @default(autoincrement())
  userId Int
  postId Int
  User   User @relation(fields: [userId], references: [id])
  Post   Post @relation(fields: [postId], references: [id])
}
